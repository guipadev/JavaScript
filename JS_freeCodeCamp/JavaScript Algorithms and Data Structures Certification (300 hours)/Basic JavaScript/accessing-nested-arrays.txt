/*
Basic JavaScript: Accessing Nested Arrays
As we have seen in earlier examples, objects can contain both nested objects and nested arrays. Similar to accessing nested objects, Array bracket notation can be chained to access nested arrays.

Here is an example of how to access a nested array:

var ourPets = [
  {
    animalType: "cat",
    names: [
      "Meowzer",
      "Fluffy",
      "Kit-Cat"
    ]
  },
  {
    animalType: "dog",
    names: [
      "Spot",
      "Bowser",
      "Frankie"
    ]
  }
];
ourPets[0].names[1]; // "Fluffy"
ourPets[1].names[0]; // "Spot"
Retrieve the second tree from the variable myPlants using object dot and array bracket notation.


*/

var myPlants = [
	{
    
	 type: "flowers",

    	 list: [
"rose", "tulip", "dandelion"]
	},
  
	{

    	 type: "trees",

	 list: ["fir", "pine",
 "birch"
]

  	}

];





var secondTree = myPlants[1].list[1]; 



/*
Hint 1
Accessing elements within an array using bracket notation []

var fruitBasket = ["apple", "banana", "orange", "melon"];
var favoriteFruit = fruitBasket[2];

console.log(favoriteFruit); // 'orange'
In this example, our favourite fruit is ‘orange’ which is at index 2 in the fruitBasket array. Using braket notation, we assign index 2 of the fruitBasket array to favoriteFruit. This makes favoriteFruit equal to ‘orange’.

Hint 2
Accessing objects within arrays using braket [] and dot . notation

var garage = [
  {
    type: "car",
    color: "red",
    make: "Ford"
  },
  {
    type: "motorbike",
    color: "black",
    make: "Yamaha"
  },
  {
    type: "bus",
    color: "yellow",
    make: "Blue Bird"
  }
];

var busColor = garage[2].color; // 'yellow'
*/