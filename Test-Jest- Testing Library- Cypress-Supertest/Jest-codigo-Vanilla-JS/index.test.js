/**
 * Requerir la funci칩n que queremos probar: isPalindrome = require('./index.js')
 *
 * La test() funci칩n la proporciona Jest y dentro de ella pondremos el c칩digo
 * que queremos que Jest ejecute.
 *
 * test() toma dos par치metros.
 * El primero es una descripci칩n de la prueba, que es un nombre distintivo que se mostrar치
 * en nuestra consola cuando se ejecute la prueba.
 *
 * El segundo par치metro es una devoluci칩n de llamada,
 * que contiene el c칩digo de prueba real.
 *
 * Dentro de esta devoluci칩n de llamada estamos llamando a la expect() funci칩n
 * (tambi칠n proporcionada por Jest).
 * expect() toma nuestra funci칩n como par치metro, que a su vez recibe un par치metro que inventamos.
 *
 * Por 칰ltimo, encadenamos la .toBe() funci칩n (proporcionada tambi칠n por Jest)
 * y como par치metro le pasamos el valor que esperamos isPalindrome() devolver para cada caso.
 * ("neuquen" es un pal칤ndromo, por lo que nuestra funci칩n deber칤a devolver true,
 * y "bariloche" no lo es, por lo que deber칤a devolver false).
 *
 * Jest es f치cil de configurarlo.
 * La autoexplicativa que es su sintaxis. 游녧
 */

const { isPalindrome } = require("./index.js");

//isPalindrome = require("./index.js");

console.log(typeof isPalindrome);

test("neuquen is palindrom", () => {
  expect(isPalindrome("neuquen")).toBe(true);
});

test("bariloche is not palindrom", () => {
  expect(isPalindrome("bariloche")).toBe(false);
});
